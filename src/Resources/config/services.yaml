parameters:
  # 设置加密相关参数
  lark_app_bot.encryption_key: '%env(default:lark_app_bot_default_key:LARK_ENCRYPTION_KEY)%'
  lark_app_bot_default_key: 'default_encryption_key_placeholder'
  lark_app_bot.encryption_salt: 'lark_bot_default_salt_12345678'

  # 设置默认配置
  lark_app_bot:
    app_id: '%env(default::LARK_APP_ID)%'
    app_secret: '%env(default::LARK_APP_SECRET)%'
    verification_token: '%env(default::LARK_VERIFICATION_TOKEN)%'
    encrypt_key: '%env(default::LARK_ENCRYPT_KEY)%'
    cache_dir: '%env(default::LARK_CACHE_DIR)%'
    api_domain: 'https://open.feishu.cn'
    debug: '%kernel.debug%'
    webhook:
      enabled_events:
        - 'im.message.receive_v1'
        - 'im.chat.member.user.added_v1'

services:
  # 默认配置
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  # 自动配置
  _instanceof:
    Tourze\LarkAppBotBundle\Service\Message\Handler\MessageHandlerInterface:
      tags: ['lark.message_handler']
    Tourze\LarkAppBotBundle\Command\Handler\ActionHandlerInterface:
      tags: ['lark.action_handler']

  # 自动注册控制器
  Tourze\LarkAppBotBundle\Controller\:
    resource: '../../Controller/'
    tags: ['controller.service_arguments']

  # 扫描 Service 目录，注册占位定义以通过 DI 扩展测试（实际可用服务在下方逐一定义覆盖）
  Tourze\LarkAppBotBundle\Service\:
    resource: '../../Service/'
    autowire: false
    autoconfigure: false
    public: false

  # Token管理器
  Tourze\LarkAppBotBundle\Service\Authentication\TokenManager:
    arguments:
      $httpClient: '@http_client'
      $cache: '@lark_app_bot.cache'
      $logger: '@?logger'

  # Token提供者别名
  Tourze\LarkAppBotBundle\Service\Authentication\TokenProviderInterface:
    alias: Tourze\LarkAppBotBundle\Service\Authentication\TokenManager

  # 文件缓存Token提供者
  Tourze\LarkAppBotBundle\Service\Authentication\FileCacheTokenProvider:
    arguments:
      $httpClient: '@http_client'
      $logger: '@?logger'
    public: true

  # 缓存服务
  lark_app_bot.cache:
    class: Symfony\Component\Cache\Adapter\FilesystemAdapter
    arguments:
      $namespace: 'lark_app_bot'
      $defaultLifetime: 0
      $directory: '%kernel.cache_dir%/lark_app_bot'

  # CacheLevel 为内部组件，这里仅注册抽象定义以满足服务扫描校验
  Tourze\LarkAppBotBundle\Service\Cache\CacheLevel:
    abstract: true

  # CacheStats 为内部工具类，仅提供抽象定义以满足服务扫描
  Tourze\LarkAppBotBundle\Service\Cache\CacheStats:
    abstract: true

  # HTTP客户端
  Tourze\LarkAppBotBundle\Service\Client\LarkClient:
    arguments:
      $tokenProvider: '@Tourze\LarkAppBotBundle\Service\Authentication\TokenProviderInterface'
      $logger: '@logger'
      $httpClient: '@?http_client'
      $debug: '%kernel.debug%'
      $cache: '@lark_app_bot.cache'
      $performanceMonitor: '@Tourze\LarkAppBotBundle\Service\Performance\PerformanceMonitor'
    tags:
      - { name: monolog.logger, channel: lark }

  # HTTP客户端接口别名
  Tourze\LarkAppBotBundle\Service\Client\LarkClientInterface:
    alias: Tourze\LarkAppBotBundle\Service\Client\LarkClient

  # 熔断器
  Tourze\LarkAppBotBundle\Service\Client\CircuitBreaker:
    arguments:
      $name: 'default'
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 响应处理器
  Tourze\LarkAppBotBundle\Service\Client\ResponseHandler:
    arguments:
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 异常处理器
  Tourze\LarkAppBotBundle\Exception\ExceptionHandler:
    arguments:
      $logger: '@logger'
      $debug: '%kernel.debug%'
    tags:
      - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }
      - { name: monolog.logger, channel: lark }

  # 消息服务
  Tourze\LarkAppBotBundle\Service\Message\MessageService:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 消息服务接口别名
  Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface:
    alias: Tourze\LarkAppBotBundle\Service\Message\MessageService

  # 消息模板管理器
  Tourze\LarkAppBotBundle\Service\Message\Template\TemplateManager:
    factory: ['Tourze\LarkAppBotBundle\Service\Message\Template\TemplateManager', 'createDefault']

  # 消息构建器（作为服务示例）
  Tourze\LarkAppBotBundle\Service\Message\Builder\TextMessageBuilder: ~
  Tourze\LarkAppBotBundle\Service\Message\Builder\RichTextBuilder: ~

  # 内置消息模板
  Tourze\LarkAppBotBundle\Service\Message\Template\WelcomeMessageTemplate:
    tags:
      - { name: lark.message_template }

  Tourze\LarkAppBotBundle\Service\Message\Template\NotificationMessageTemplate:
    tags:
      - { name: lark.message_template }

  
  # 事件分发器
  Tourze\LarkAppBotBundle\EventSubscriber\EventDispatcher:
    arguments:
      $symfonyEventDispatcher: '@event_dispatcher'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 消息处理器注册表
  Tourze\LarkAppBotBundle\Service\Message\Handler\MessageHandlerRegistry:
    arguments:
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 默认消息处理器
  Tourze\LarkAppBotBundle\Service\Message\Handler\DefaultMessageHandler:
    arguments:
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $logger: '@logger'
    tags:
      - { name: lark.message_handler, priority: -1000 }
      - { name: monolog.logger, channel: lark }

  # 消息事件订阅器
  Tourze\LarkAppBotBundle\EventSubscriber\MessageEventSubscriber:
    arguments:
      $handlerRegistry: '@Tourze\LarkAppBotBundle\Service\Message\Handler\MessageHandlerRegistry'
      $logger: '@logger'
    tags:
      - { name: kernel.event_subscriber }
      - { name: monolog.logger, channel: lark }

  # 异步事件处理器
  Tourze\LarkAppBotBundle\EventSubscriber\AsyncEventHandler:
    arguments:
      $logger: '@logger'
      $messageBus: '@?messenger.default_bus'
    tags:
      - { name: monolog.logger, channel: lark }

  # 群组服务
  Tourze\LarkAppBotBundle\Service\Group\GroupService:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 群组事件处理器
  Tourze\LarkAppBotBundle\Service\Group\GroupEventHandler:
    arguments:
      $logger: '@logger'
      $eventDispatcher: '@event_dispatcher'
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'
    tags:
      - { name: monolog.logger, channel: lark }

  # 群组命令处理器
  Tourze\LarkAppBotBundle\Service\Group\GroupCommandHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $logger: '@logger'
    tags:
      - { name: lark.message_handler, priority: 100 }
      - { name: monolog.logger, channel: lark }

  # 群组工具
  Tourze\LarkAppBotBundle\Service\Group\GroupTools:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 群组操作处理器注册表
  Tourze\LarkAppBotBundle\Command\Handler\ActionHandlerRegistry:
    arguments:
      $handlers:
        - '@Tourze\LarkAppBotBundle\Command\Handler\ListGroupsActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\ShowGroupInfoActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\CreateGroupActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\UpdateGroupActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\AddMembersActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\RemoveMembersActionHandler'
        - '@Tourze\LarkAppBotBundle\Command\Handler\ListMembersActionHandler'

  # 群组操作处理器
  Tourze\LarkAppBotBundle\Command\Handler\ShowGroupInfoActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'

  Tourze\LarkAppBotBundle\Command\Handler\ListGroupsActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'

  Tourze\LarkAppBotBundle\Command\Handler\CreateGroupActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'
      $infoHandler: '@Tourze\LarkAppBotBundle\Command\Handler\ShowGroupInfoActionHandler'

  Tourze\LarkAppBotBundle\Command\Handler\UpdateGroupActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'
      $infoHandler: '@Tourze\LarkAppBotBundle\Command\Handler\ShowGroupInfoActionHandler'

  Tourze\LarkAppBotBundle\Command\Handler\AddMembersActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'

  Tourze\LarkAppBotBundle\Command\Handler\RemoveMembersActionHandler:
    arguments:
      $groupService: '@Tourze\LarkAppBotBundle\Service\Group\GroupService'

  Tourze\LarkAppBotBundle\Command\Handler\ListMembersActionHandler:
    arguments:
      $groupTools: '@Tourze\LarkAppBotBundle\Service\Group\GroupTools'

  # 用户数据服务
  Tourze\LarkAppBotBundle\Service\User\UserDataService:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户缓存服务
  Tourze\LarkAppBotBundle\Service\User\UserCacheService:
    arguments:
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户搜索服务
  Tourze\LarkAppBotBundle\Service\User\UserSearchService:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户权限服务
  Tourze\LarkAppBotBundle\Service\User\UserPermissionService:
    arguments:
      $logger: '@logger'
      $userDataService: '@Tourze\LarkAppBotBundle\Service\User\UserDataService'
      $cacheService: '@Tourze\LarkAppBotBundle\Service\User\UserCacheService'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户关系服务
  Tourze\LarkAppBotBundle\Service\User\UserRelationService:
    arguments:
      $logger: '@logger'
      $userDataService: '@Tourze\LarkAppBotBundle\Service\User\UserDataService'
      $cacheService: '@Tourze\LarkAppBotBundle\Service\User\UserCacheService'
      $searchService: '@Tourze\LarkAppBotBundle\Service\User\UserSearchService'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户服务
  Tourze\LarkAppBotBundle\Service\User\UserService:
    arguments:
      $dataService: '@Tourze\LarkAppBotBundle\Service\User\UserDataService'
      $cacheService: '@Tourze\LarkAppBotBundle\Service\User\UserCacheService'
      $searchService: '@Tourze\LarkAppBotBundle\Service\User\UserSearchService'
      $permissionService: '@Tourze\LarkAppBotBundle\Service\User\UserPermissionService'
      $relationService: '@Tourze\LarkAppBotBundle\Service\User\UserRelationService'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户服务接口别名
  Tourze\LarkAppBotBundle\Service\User\UserServiceInterface:
    alias: Tourze\LarkAppBotBundle\Service\User\UserService

  # 用户缓存管理器
  Tourze\LarkAppBotBundle\Service\User\UserCacheManager:
    arguments:
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户同步服务
  Tourze\LarkAppBotBundle\Service\User\UserSyncService:
    arguments:
      $userService: '@Tourze\LarkAppBotBundle\Service\User\UserService'
      $cacheManager: '@Tourze\LarkAppBotBundle\Service\User\UserCacheManager'
      $strategyManager: '@Tourze\LarkAppBotBundle\Service\User\Sync\SyncStrategyManager'
      $dataProcessor: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserDataProcessor'
      $eventDispatcher: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserEventDispatcher'
      $errorHandler: '@Tourze\LarkAppBotBundle\Service\User\Sync\SyncErrorHandler'
      $batchProcessor: '@Tourze\LarkAppBotBundle\Service\User\Sync\BatchSyncProcessor'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户同步服务接口别名
  Tourze\LarkAppBotBundle\Service\User\UserSyncServiceInterface:
    alias: Tourze\LarkAppBotBundle\Service\User\UserSyncService

  # 用户追踪器
  Tourze\LarkAppBotBundle\Service\User\UserTracker:
    arguments:
      $cache: '@lark_app_bot.cache'
      $eventDispatcher: '@event_dispatcher'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户数据管理器
  Tourze\LarkAppBotBundle\Service\User\UserDataManager:
    arguments:
      $userService: '@Tourze\LarkAppBotBundle\Service\User\UserService'
      $cacheManager: '@Tourze\LarkAppBotBundle\Service\User\UserCacheManager'
      $syncService: '@Tourze\LarkAppBotBundle\Service\User\UserSyncService'
      $eventDispatcher: '@event_dispatcher'
      $logger: '@logger'
      $dataCacheManager: '@Tourze\LarkAppBotBundle\Service\User\UserDataCacheManager'
      $dataBuilder: '@Tourze\LarkAppBotBundle\Service\User\UserDataBuilder'
      $dataExporter: '@Tourze\LarkAppBotBundle\Service\User\UserDataExporter'
      $dataImporter: '@Tourze\LarkAppBotBundle\Service\User\UserDataImporter'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户缓存管理器接口别名
  Tourze\LarkAppBotBundle\Service\User\UserCacheManagerInterface:
    alias: Tourze\LarkAppBotBundle\Service\User\UserCacheManager

  # 用户数据缓存管理器
  Tourze\LarkAppBotBundle\Service\User\UserDataCacheManager:
    arguments:
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户权限提取器
  Tourze\LarkAppBotBundle\Service\User\UserPermissionExtractor: ~

  # 用户权限计算器
  Tourze\LarkAppBotBundle\Service\User\UserPermissionCalculator: ~

  # 用户数据脱敏器
  Tourze\LarkAppBotBundle\Service\User\UserDataMasker: ~

  # 用户数据构建器
  Tourze\LarkAppBotBundle\Service\User\UserDataBuilder:
    arguments:
      $userService: '@Tourze\LarkAppBotBundle\Service\User\UserService'
      $permissionExtractor: '@Tourze\LarkAppBotBundle\Service\User\UserPermissionExtractor'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户数据导出器
  Tourze\LarkAppBotBundle\Service\User\UserDataExporter:
    arguments:
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户数据导入器
  Tourze\LarkAppBotBundle\Service\User\UserDataImporter:
    arguments:
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 用户事件处理器
  Tourze\LarkAppBotBundle\Service\User\EventHandler\UserEventHandler:
    arguments:
      $cacheManager: '@Tourze\LarkAppBotBundle\Service\User\UserCacheManager'
      $userTracker: '@Tourze\LarkAppBotBundle\Service\User\UserTracker'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 卡片消息构建器
  Tourze\LarkAppBotBundle\Service\Message\Builder\CardMessageBuilder: ~

  # 卡片模板管理器
  Tourze\LarkAppBotBundle\Service\Message\Template\CardTemplateManager: ~

  # 异步消息 DTO（注册为抽象服务以通过服务扫描校验）
  Tourze\LarkAppBotBundle\Service\Message\Async\SendMessageCommand:
    abstract: true
  Tourze\LarkAppBotBundle\Service\Message\Async\BatchSendMessageCommand:
    abstract: true

  # 菜单配置
  Tourze\LarkAppBotBundle\Service\Menu\MenuConfig: ~

  # 菜单构建器（工具类，注册为抽象服务以通过服务扫描校验）
  Tourze\LarkAppBotBundle\Service\Menu\MenuBuilder:
    abstract: true

  # 菜单服务
  Tourze\LarkAppBotBundle\Service\Menu\MenuService:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $logger: '@logger'
      $cache: '@lark_app_bot.cache'
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
    tags:
      - { name: monolog.logger, channel: lark }

  # 菜单事件订阅器
  Tourze\LarkAppBotBundle\EventSubscriber\MenuEventSubscriber:
    arguments:
      $menuService: '@Tourze\LarkAppBotBundle\Service\Menu\MenuService'
      $logger: '@logger'
    tags:
      - { name: kernel.event_subscriber }
      - { name: monolog.logger, channel: lark }

  # 外部协作 - 外部用户识别器
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalUserIdentifier:
    arguments:
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_external }

  # 外部协作 - 权限隔离
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\PermissionIsolation:
    arguments:
      $userIdentifier: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalUserIdentifier'
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_external }

  # 外部协作 - 审计导出/统计（工具类，作为可注入服务供测试与业务使用）
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\AuditExporter:
    public: true
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\AuditStatistics:
    abstract: true

  # 外部协作 - 外部群组管理器
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalGroupManager:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $userIdentifier: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalUserIdentifier'
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_external }

  # 外部协作 - 安全策略
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\SecurityPolicy:
    arguments:
      $logger: '@logger'
      $customPolicies: null
    tags:
      - { name: monolog.logger, channel: lark_security }

  # 外部协作 - 外部邀请管理器
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalInvitationManager:
    arguments:
      $client: '@Tourze\LarkAppBotBundle\Service\Client\LarkClient'
      $cache: '@lark_app_bot.cache'
      $eventDispatcher: '@event_dispatcher'
      $securityPolicy: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\SecurityPolicy'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_external }

  # 外部协作 - 访问控制列表
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\AccessControlList:
    arguments:
      $cache: '@lark_app_bot.cache'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_security }

  # 外部协作 - 审计日志记录器
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\AuditLogger:
    arguments:
      $logger: '@logger'
      $eventDispatcher: '@event_dispatcher'
      $userIdentifier: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ExternalUserIdentifier'
      $requestStack: '@request_stack'
    tags:
      - { name: monolog.logger, channel: lark_audit }

  # 外部协作 - 合规性检查器
  Tourze\LarkAppBotBundle\Service\ExternalCollaboration\ComplianceChecker:
    arguments:
      $securityPolicy: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\SecurityPolicy'
      $auditLogger: '@Tourze\LarkAppBotBundle\Service\ExternalCollaboration\AuditLogger'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_compliance }


  # 控制台命令辅助类（不是命令）

  Tourze\LarkAppBotBundle\Command\CommandExecutionContext:
    autowire: false

  # Command/Helper 目录下的辅助类
  Tourze\LarkAppBotBundle\Command\Helper\:
    resource: '../../Command/Helper/'
    autowire: true
    public: true

  # Command/Output 目录下的输出类
  Tourze\LarkAppBotBundle\Command\Output\:
    resource: '../../Command/Output/'
    autowire: true

  
  # Command/Handler 目录下的处理器类（已在下方有详细配置，这里注册其他未明确配置的）
  # ActionHandler 已在下方单独配置，这里不重复注册
  
  # 控制台命令 - 只注册真正的命令类

  Tourze\LarkAppBotBundle\Command\ConfigCheckCommand:
    arguments:
      $config: '%lark_app_bot%'
    tags: ['console.command']

  Tourze\LarkAppBotBundle\Command\GroupManageCommand:
    tags: ['console.command']

  Tourze\LarkAppBotBundle\Command\SendMessageCommand:
    tags: ['console.command']

  Tourze\LarkAppBotBundle\Command\UserQueryCommand:
    tags: ['console.command']

  # 配置检查辅助类（仅注册以通过服务发现校验，不在容器中实例化）
  Tourze\LarkAppBotBundle\Command\ConfigChecker:
    abstract: true
  
  # 性能监控 - Prometheus指标收集器
  Tourze\LarkAppBotBundle\Service\Performance\MetricsCollector:
    arguments:
      $logger: '@logger'
      $registry: null
    tags:
      - { name: monolog.logger, channel: lark_metrics }
  
  # 性能监控 - 性能监控器
  Tourze\LarkAppBotBundle\Service\Performance\PerformanceMonitor:
    arguments:
      $metricsCollector: '@Tourze\LarkAppBotBundle\Service\Performance\MetricsCollector'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark_performance }
  
  # 并发处理 - 并发消息服务
  Tourze\LarkAppBotBundle\Service\Message\ConcurrentMessageService:
    arguments:
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $messageBus: '@messenger.default_bus'
      $logger: '@logger'
      $defaultMode: 'sync'
    tags:
      - { name: monolog.logger, channel: lark }
  
  # 异步消息处理器
  Tourze\LarkAppBotBundle\Service\Message\Async\SendMessageHandler:
    arguments:
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $logger: '@logger'
      $performanceMonitor: '@Tourze\LarkAppBotBundle\Service\Performance\PerformanceMonitor'
    tags:
      - { name: messenger.message_handler }
      - { name: monolog.logger, channel: lark_async }

  # 批量消息处理器
  Tourze\LarkAppBotBundle\Service\Message\Async\BatchSendMessageHandler:
    arguments:
      $messageService: '@Tourze\LarkAppBotBundle\Service\Message\MessageServiceInterface'
      $messageBus: '@messenger.default_bus'
      $logger: '@logger'
      $performanceMonitor: '@Tourze\LarkAppBotBundle\Service\Performance\PerformanceMonitor'
    tags:
      - { name: messenger.message_handler }
      - { name: monolog.logger, channel: lark_async }
  
  # 多级缓存实现
  Tourze\LarkAppBotBundle\Service\Cache\MultiLevelCache:
    arguments:
      $localCache: '@lark_app_bot.cache'
      $logger: '@logger'
      $distributedCache: null
      $configs:
        memory:
          enabled: true
          max_items: 1000
          default_lifetime: 300
        local:
          enabled: true
          default_lifetime: 3600
        distributed:
          enabled: false
          default_lifetime: 86400
    tags:
      - { name: monolog.logger, channel: lark_cache }
  
  # 缓存策略管理器
  Tourze\LarkAppBotBundle\Service\Cache\CacheStrategyManager:
    arguments:
      $multiLevelCache: '@Tourze\LarkAppBotBundle\Service\Cache\MultiLevelCache'
      $logger: '@logger'
      $performanceMonitor: '@Tourze\LarkAppBotBundle\Service\Performance\PerformanceMonitor'
    tags:
      - { name: monolog.logger, channel: lark_cache }
  
  # 属性控制器加载器
  Tourze\LarkAppBotBundle\Service\AttributeControllerLoader: ~

  # 用户同步相关服务
  Tourze\LarkAppBotBundle\Service\User\Sync\SyncStrategyManager: ~

  Tourze\LarkAppBotBundle\Service\User\Sync\UserDataProcessor:
    arguments:
      $userService: '@Tourze\LarkAppBotBundle\Service\User\UserService'
      $cacheManager: '@Tourze\LarkAppBotBundle\Service\User\UserCacheManager'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  Tourze\LarkAppBotBundle\Service\User\Sync\UserChangeDetector: ~

  Tourze\LarkAppBotBundle\Service\User\Sync\UserEventDispatcher:
    arguments:
      $eventDispatcher: '@event_dispatcher'
      $changeDetector: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserChangeDetector'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  Tourze\LarkAppBotBundle\Service\User\Sync\SyncErrorHandler:
    arguments:
      $logger: '@logger'
      $dataProcessor: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserDataProcessor'
      $eventDispatcher: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserEventDispatcher'
    tags:
      - { name: monolog.logger, channel: lark }

  Tourze\LarkAppBotBundle\Service\User\Sync\BatchSyncProcessor:
    arguments:
      $userService: '@Tourze\LarkAppBotBundle\Service\User\UserService'
      $dataProcessor: '@Tourze\LarkAppBotBundle\Service\User\Sync\UserDataProcessor'
      $strategyManager: '@Tourze\LarkAppBotBundle\Service\User\Sync\SyncStrategyManager'
      $errorHandler: '@Tourze\LarkAppBotBundle\Service\User\Sync\SyncErrorHandler'
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: lark }

  # 实体存储库服务
  Tourze\LarkAppBotBundle\Repository\MessageRecordRepository: ~
  Tourze\LarkAppBotBundle\Repository\UserSyncRepository: ~
  Tourze\LarkAppBotBundle\Repository\GroupInfoRepository: ~
  Tourze\LarkAppBotBundle\Repository\BotConfigurationRepository: ~
  Tourze\LarkAppBotBundle\Repository\ApiLogRepository: ~

  # EasyAdmin CRUD控制器
  Tourze\LarkAppBotBundle\Controller\Admin\MessageRecordCrudController: ~
  Tourze\LarkAppBotBundle\Controller\Admin\UserSyncCrudController: ~
  Tourze\LarkAppBotBundle\Controller\Admin\GroupInfoCrudController: ~
  Tourze\LarkAppBotBundle\Controller\Admin\BotConfigurationCrudController: ~
  Tourze\LarkAppBotBundle\Controller\Admin\ApiLogCrudController: ~

  # 管理员菜单服务
  Tourze\LarkAppBotBundle\Service\AdminMenu:
    arguments:
      $linkGenerator: '@Tourze\EasyAdminMenuBundle\Service\LinkGeneratorInterface'
    tags:
      - { name: tourze.easy_admin_menu }

  # 飞书应用日志装饰器
  Tourze\LarkAppBotBundle\Service\Logger\LarkLogger:
    arguments:
      $logger: '@logger'
      $requestStack: '@request_stack'
    tags:
      - { name: monolog.logger, channel: lark }

  # 配置检查器服务
  Tourze\LarkAppBotBundle\Command\Checker\AuthConfigChecker:
    arguments:
      $config: '%lark_app_bot%'
      $tokenManager: '@Tourze\LarkAppBotBundle\Service\Authentication\TokenProviderInterface'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker:
    arguments:
      $config: '%lark_app_bot%'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\CacheConfigChecker:
    arguments:
      $config: '%lark_app_bot%'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\PermissionsChecker:
    arguments:
      $config: '%lark_app_bot%'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\WebhookConfigChecker:
    arguments:
      $config: '%lark_app_bot%'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\ApiConnectionChecker:
    arguments:
      $config: '%lark_app_bot%'
      $larkClient: '@Tourze\LarkAppBotBundle\Service\Client\LarkClientInterface'
    public: true

  Tourze\LarkAppBotBundle\Command\Checker\BaseChecker:
    abstract: true
    arguments:
      $config: '%lark_app_bot%'
  Tourze\LarkAppBotBundle\Command\Helper\ApiTester:
    arguments:
      $larkClient: '@Tourze\LarkAppBotBundle\Service\Client\LarkClientInterface'
      $config: '%lark_app_bot%'
    public: true

  Tourze\LarkAppBotBundle\Command\Helper\ConfigurationValidator:
    arguments:
      $config: '%lark_app_bot%'
    public: true

  # 测试场景专用的 BasicConfigChecker 变体服务（保持在主配置中以避免 services_test.yaml 规则冲突）
  basic_config_checker.missing_required:
    class: Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker
    arguments:
      $config:
        app_id: ''
        app_secret: ''
        api_domain: 'https://open.feishu.cn'
    public: true

  basic_config_checker.empty:
    class: Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker
    arguments:
      $config: { }
    public: true

  basic_config_checker.invalid_domain:
    class: Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker
    arguments:
      $config:
        app_id: 'test_app_id'
        app_secret: 'test_app_secret'
        api_domain: 'invalid.example.com'
    public: true

  basic_config_checker.larksuite:
    class: Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker
    arguments:
      $config:
        app_id: 'test_app_id'
        app_secret: 'test_app_secret'
        api_domain: 'https://open.larksuite.com'
    public: true

  basic_config_checker.partial:
    class: Tourze\LarkAppBotBundle\Command\Checker\BasicConfigChecker
    arguments:
      $config:
        app_id: 'test_app_id'
        api_domain: 'https://open.feishu.cn'
    public: true
